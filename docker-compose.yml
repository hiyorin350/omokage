services:
  db:
    image: postgres:15
    env_file:
      - ./backend/.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    # DB が healthy になるまで待ってから migrate -> runserver
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_HOST: db
    volumes:
      - ./backend:/app
      - media:/app/media
    ports:
      - "8000:8000"

  frontend:
    build: ./frontend
    command: npm run dev -- -H 0.0.0.0
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      NEXT_PUBLIC_API_BASE: "http://localhost:8000"
      WATCHPACK_POLLING: "true"
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  pgdata:
  media:
